"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterpretadorPortugolStudio = void 0;
const interpretador_base_1 = require("@designliquido/delegua/interpretador/interpretador-base");
const espaco_variaveis_1 = require("@designliquido/delegua/espaco-variaveis");
const pilha_escopos_execucao_portugol_studio_1 = require("./pilha-escopos-execucao-portugol-studio");
const comum = __importStar(require("./comum"));
class InterpretadorPortugolStudio extends interpretador_base_1.InterpretadorBase {
    constructor(diretorioBase, performance = false, funcaoDeRetorno = null, funcaoLimpa = null) {
        super(diretorioBase, performance, funcaoDeRetorno);
        this.funcaoLimpa = () => {
            console.warn('Função "limpa()" não está ligada a uma interface de entrada e saída.');
        };
        if (funcaoLimpa !== null) {
            this.funcaoLimpa = funcaoLimpa;
        }
        this.pilhaEscoposExecucao = new pilha_escopos_execucao_portugol_studio_1.PilhaEscoposExecucaoPortugolStudio();
        const escopoExecucao = {
            declaracoes: [],
            declaracaoAtual: 0,
            ambiente: new espaco_variaveis_1.EspacoVariaveis(),
            finalizado: false,
            tipo: 'outro',
            emLacoRepeticao: false,
        };
        this.pilhaEscoposExecucao.empilhar(escopoExecucao);
    }
    async visitarExpressaoLimpa(expressao) {
        this.funcaoLimpa();
        return Promise.resolve();
    }
    async visitarDeclaracaoImportar(declaracao) {
        return comum.visitarExpressaoImportarComum(declaracao);
    }
    /**
     * Execução da leitura de valores da entrada configurada no
     * início da aplicação.
     * @param expressao Expressão do tipo Leia
     * @returns Promise com o resultado da leitura.
     */
    async visitarExpressaoLeia(expressao) {
        return comum.visitarExpressaoLeiaComum(this, this.interfaceEntradaSaida, expressao);
    }
    async visitarExpressaoMatriz(expressao) {
        return comum.visitarExpressaoMatrizComum(this, expressao);
    }
    /**
     * Execução de uma escrita na saída padrão, sem quebras de linha, e sem remoção de espaços ao final.
     * @param declaracao A declaração.
     * @returns Sempre nulo, por convenção de visita.
     */
    async visitarDeclaracaoEscrevaMesmaLinha(declaracao) {
        try {
            const formatoTexto = await comum.avaliarArgumentosEscreva(this, declaracao.argumentos);
            this.funcaoDeRetornoMesmaLinha(formatoTexto);
            return null;
        }
        catch (erro) {
            this.erros.push({
                erroInterno: erro,
                linha: declaracao.linha,
                hashArquivo: declaracao.hashArquivo,
            });
        }
    }
}
exports.InterpretadorPortugolStudio = InterpretadorPortugolStudio;
//# sourceMappingURL=interpretador-portugol-studio.js.map