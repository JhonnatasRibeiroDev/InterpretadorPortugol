import { InterpretadorInterface } from '@designliquido/delegua/interfaces';
export declare const TIPO_INTEIRO = 1;
export declare const TIPO_CADEIA = 2;
export declare const TIPO_CARACTER = 3;
export declare const TIPO_REAL = 4;
export declare const TIPO_LOGICO = 5;
export declare const TIPO_OBJETO = 6;
export declare const TIPO_VETOR = 7;
export declare function criar_objeto_via_json(interpretador: InterpretadorInterface, json: string): Promise<number>;
export declare function criar_objeto_via_xml(interpretador: InterpretadorInterface, xml: string): Promise<number>;
export declare function criar_objeto(): Promise<number>;
export declare function atribuir_propriedade(interpretador: InterpretadorInterface, endereco: number, propriedade: string, valor: any): Promise<void>;
export declare function obter_propriedade_tipo_inteiro(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<number>;
export declare function obter_propriedade_tipo_real(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<number>;
export declare function obter_propriedade_tipo_logico(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<boolean>;
export declare function obter_propriedade_tipo_caracter(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<string>;
export declare function obter_propriedade_tipo_cadeia(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<string>;
export declare function obter_propriedade_tipo_objeto(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<number>;
export declare function obter_propriedade_tipo_objeto_em_vetor(interpretador: InterpretadorInterface, endereco: number, propriedade: string, indice: number): Promise<number>;
export declare function obter_propriedade_tipo_caracter_em_vetor(interpretador: InterpretadorInterface, endereco: number, propriedade: string, indice: number): Promise<string>;
export declare function obter_propriedade_tipo_logico_em_vetor(interpretador: InterpretadorInterface, endereco: number, propriedade: string, indice: number): Promise<boolean>;
export declare function obter_propriedade_tipo_real_em_vetor(interpretador: InterpretadorInterface, endereco: number, propriedade: string, indice: number): Promise<number>;
export declare function obter_propriedade_tipo_inteiro_em_vetor(interpretador: InterpretadorInterface, endereco: number, propriedade: string, indice: number): Promise<number>;
export declare function obter_propriedade_tipo_cadeia_em_vetor(interpretador: InterpretadorInterface, endereco: number, propriedade: string, indice: number): Promise<string>;
export declare function obter_tamanho_vetor_propriedade(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<number>;
export declare function liberar_objeto(interpretador: InterpretadorInterface, endereco: number): Promise<void>;
export declare function obter_json(interpretador: InterpretadorInterface, endereco: number): Promise<string>;
export declare function contem_propriedade(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<boolean>;
export declare function tipo_propriedade(interpretador: InterpretadorInterface, endereco: number, propriedade: string): Promise<number>;
//# sourceMappingURL=objetos.d.ts.map