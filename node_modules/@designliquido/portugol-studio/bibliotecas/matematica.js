"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PI = void 0;
exports.potencia = potencia;
exports.raiz = raiz;
exports.arredondar = arredondar;
exports.logaritmo = logaritmo;
exports.seno = seno;
exports.cosseno = cosseno;
exports.tangente = tangente;
exports.valor_absoluto = valor_absoluto;
exports.maior_numero = maior_numero;
exports.menor_numero = menor_numero;
exports.PI = Math.PI;
async function potencia(interpretador, base, expoente) {
    return Promise.resolve(Math.pow(base, expoente));
}
async function raiz(interpretador, radicando, indice) {
    return Promise.resolve(Math.pow(radicando, 1 / indice));
}
async function arredondar(interpretador, numero, casas) {
    let fator = 1;
    for (let i = 1; i <= casas; i++) {
        fator *= 10;
    }
    return Promise.resolve(Math.round(numero * fator) / fator);
}
async function logaritmo(interpretador, numero, base) {
    return Promise.resolve(Math.log(numero) / Math.log(base));
}
async function seno(interpretador, angulo) {
    return Promise.resolve(Math.sin(angulo));
}
async function cosseno(interpretador, angulo) {
    return Promise.resolve(Math.cos(angulo));
}
async function tangente(interpretador, angulo) {
    return Promise.resolve(Math.tan(angulo));
}
async function valor_absoluto(interpretador, numero) {
    return Promise.resolve(Math.abs(numero));
}
async function maior_numero(interpretador, numeroA, numeroB) {
    return Promise.resolve(Math.max(numeroA, numeroB));
}
async function menor_numero(interpretador, numeroA, numeroB) {
    return Promise.resolve(Math.min(numeroA, numeroB));
}
//# sourceMappingURL=matematica.js.map