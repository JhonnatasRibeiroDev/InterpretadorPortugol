"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.importarArquivoJson = importarArquivoJson;
exports.exportarObjetoParaArquivoJson = exportarObjetoParaArquivoJson;
exports.textoParaJson = textoParaJson;
exports.objetoParaTextoJson = objetoParaTextoJson;
const sistemaArquivos = __importStar(require("fs"));
const caminho = __importStar(require("path"));
/**
 * Importa um arquivo como JSON.
 * @param {any} _ O visitante da instrução, normalmente um interpretador.
 * @param {string} caminhoArquivo O caminho absoluto do arquivo.
 * @returns O resultado da avaliação do arquivo em JSON.
 */
function importarArquivoJson(_, caminhoArquivo) {
    const caminhoResolvido = caminho.resolve(caminhoArquivo);
    const dadosDoArquivo = sistemaArquivos.readFileSync(caminhoResolvido);
    return JSON.parse(dadosDoArquivo.toString());
}
/**
 * Exporta um objeto, normalmente um dicionário Delégua, para um arquivo JSON.
 * @param {any} _ O visitante da instrução, normalmente um interpretador.
 * @param {any} conteudoJson O dicionário em Delégua a ser transformado em JSON.
 * @param {string} caminhoArquivo O caminho absoluto do arquivo JSON.
 */
function exportarObjetoParaArquivoJson(_, conteudoJson, caminhoArquivo) {
    const conteudoTratado = JSON.stringify(conteudoJson);
    sistemaArquivos.writeFileSync(caminhoArquivo, conteudoTratado);
}
/**
 * Converte um texto serializável JSON em um objeto JSON.
 * @param {any} _ O visitante da instrução, normalmente um interpretador.
 * @param {string} texto O texto, normalmente uma representação de JSON.
 * @returns O resultado como um objeto do JavaScript.
 */
function textoParaJson(_, texto) {
    return JSON.parse(texto);
}
/**
 * Converte um objeto do JavaScript, normalmente um dicionário Delégua, para
 * texto representando JSON.
 * @param {any} _ O visitante da instrução, normalmente um interpretador.
 * @param {any} objeto Um objeto JavaScript.
 * @returns {string} A representação do objeto em JSON.
 */
function objetoParaTextoJson(_, objeto) {
    return JSON.stringify(objeto);
}
//# sourceMappingURL=index.js.map