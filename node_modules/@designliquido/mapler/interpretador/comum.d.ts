import { Escreva, EscrevaMesmaLinha } from '@designliquido/delegua';
import { Binario } from '@designliquido/delegua/construtos';
import { VisitanteComumInterface } from '@designliquido/delegua/interfaces';
import { InterpretadorMapler } from './interpretador-mapler';
/**
 * Método de visita de expressão binária.
 * Reintroduzido pelas particularidades do VisuAlg.
 * @param expressao A expressão binária.
 * @returns O resultado da resolução da expressão.
 */
export declare function visitarExpressaoBinaria(visitante: VisitanteComumInterface, expressao: Binario | any): Promise<any>;
/**
 * Execução de uma escrita na saída padrão, sem quebras de linha.
 * Implementada para alguns dialetos, como Mapler.
 *
 * Como `readline.question` sobrescreve o que foi escrito antes, aqui
 * definimos `this.mensagemPrompt` para uso com `leia`.
 * No Mapler é muito comum usar `escreva()` seguido de `leia()` para
 * gerar um prompt na mesma linha.
 * @param declaracao A declaração.
 * @returns Sempre nulo, por convenção de visita.
 */
export declare function visitarDeclaracaoEscrevaMesmaLinha(interpretador: InterpretadorMapler, declaracao: EscrevaMesmaLinha): Promise<any>;
/**
 * Execução de uma escrita na saída configurada, que pode ser `console` (padrão) ou
 * alguma função para escrever numa página Web.
 * @param declaracao A declaração.
 * @returns Sempre nulo, por convenção de visita.
 */
export declare function visitarDeclaracaoEscreva(interpretador: InterpretadorMapler, declaracao: Escreva): Promise<any>;
//# sourceMappingURL=comum.d.ts.map