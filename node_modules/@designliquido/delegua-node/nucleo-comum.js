"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NucleoComum = void 0;
const chalk_1 = __importDefault(require("chalk"));
const delegua_1 = __importDefault(require("@designliquido/delegua/tipos-de-simbolos/delegua"));
class NucleoComum {
    /**
     * Verifica erros nas etapas de lexação e avaliação sintática.
     * @param retornoLexador Um objeto que implementa a interface RetornoImportador.
     * @returns Verdadeiro se há erros. Falso caso contrário.
     */
    afericaoErrosLexador(retornoLexador) {
        if (retornoLexador.erros.length > 0) {
            for (const erroLexador of retornoLexador.erros) {
                this.reportar(erroLexador.linha, ` no '${erroLexador.caractere}'`, erroLexador.mensagem);
            }
            return true;
        }
        return false;
    }
    afericaoErrosAvaliadorSintatico(retornoAvaliadorSintatico) {
        if (retornoAvaliadorSintatico.erros.length > 0) {
            for (const erroAvaliadorSintatico of retornoAvaliadorSintatico.erros) {
                this.erro(erroAvaliadorSintatico.simbolo, erroAvaliadorSintatico.message);
            }
            return true;
        }
        return false;
    }
    reportar(linha, onde, mensagem) {
        /* if (this.nomeArquivo)
            console.error(
                chalk.red(`[Arquivo: ${this.nomeArquivo}] [Linha: ${linha}]`) + ` Erro${onde}: ${mensagem}`
            );
        else */
        console.error(chalk_1.default.red(`[Linha: ${linha}]`) + ` Erro${onde}: ${mensagem}`);
    }
    erro(simbolo, mensagemDeErro) {
        const _simbolo = simbolo || { tipo: delegua_1.default.EOF, linha: -1, lexema: '(indefinido)' };
        if (_simbolo.tipo === delegua_1.default.EOF) {
            this.reportar(Number(_simbolo.linha), ' no final do código', mensagemDeErro);
        }
        else {
            this.reportar(Number(_simbolo.linha), ` no '${_simbolo.lexema}'`, mensagemDeErro);
        }
    }
}
exports.NucleoComum = NucleoComum;
//# sourceMappingURL=nucleo-comum.js.map