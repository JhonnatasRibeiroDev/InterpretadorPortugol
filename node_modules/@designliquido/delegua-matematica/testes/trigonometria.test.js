"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const trigonometria_1 = require("../trigonometria");
describe("seno", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.seno)(undefined, null)).toThrow();
    });
    it("calcula o seno de 90 graus", () => {
        expect((0, trigonometria_1.seno)(undefined, 90)).toBe(0.8939966636005579);
    });
});
describe("cosseno", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.cosseno)(undefined, null)).toThrow();
    });
    it("calcula o cosseno de 90 graus", () => {
        expect((0, trigonometria_1.cosseno)(undefined, 90)).toBe(-0.4480736161291702);
    });
});
describe("graus", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.graus)(undefined, null)).toThrow();
    });
    it("calcula o ângulo de pi", () => {
        expect((0, trigonometria_1.graus)(undefined, Math.PI)).toBe(180);
    });
});
describe("radiano", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.radiano)(undefined, null)).toThrow();
    });
    it("calcula o radiano de 180 graus", () => {
        expect((0, trigonometria_1.radiano)(undefined, 180)).toBe(Math.PI);
    });
});
describe("tangente", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.tangente)(undefined, null)).toThrow();
    });
    it("calcula a tangente", () => {
        expect((0, trigonometria_1.tangente)(undefined, 180)).toEqual(1.3386902103511544);
    });
});
describe("arcoCosseno", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.arcoCosseno)(undefined, null)).toThrow();
    });
    it("calcula o arco cosseno de zero", () => {
        expect((0, trigonometria_1.arcoCosseno)(undefined, 0)).toEqual(1.5707963267948966);
    });
});
describe("arcoSeno", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.arcoSeno)(undefined, null)).toThrow();
    });
    it("calcula o arco seno de 1", () => {
        expect((0, trigonometria_1.arcoSeno)(undefined, 1)).toEqual(1.5707963267948966);
    });
});
describe("arcoTangente", () => {
    it("atira exceção se num for nulo", () => {
        expect(() => (0, trigonometria_1.arcoTangente)(undefined, null)).toThrow();
    });
    it("calcula o arco seno", () => {
        expect((0, trigonometria_1.arcoTangente)(undefined, 1)).toEqual(0.7853981633974483);
    });
});
//# sourceMappingURL=trigonometria.test.js.map