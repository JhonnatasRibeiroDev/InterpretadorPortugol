import { AcessoMetodoOuPropriedade, Construto } from '@designliquido/delegua/construtos';
import { InterpretadorComDepuracao } from '@designliquido/delegua/interpretador/interpretador-com-depuracao';
import { InterpretadorPotigolInterface } from '../interfaces';
import { LeiaInteiro, LeiaInteiros, LeiaReais, LeiaReal, LeiaTexto, LeiaTextos, ReatribuicaoVariavel } from '../declaracoes';
import { QualTipo } from '../construtos';
export declare class InterpretadorPotigolComDepuracao extends InterpretadorComDepuracao implements InterpretadorPotigolInterface {
    constructor(diretorioBase: string, funcaoDeRetorno?: Function, funcaoDeRetornoMesmaLinha?: Function);
    visitarDeclaracaoLeiaInteiros(declaracao: LeiaInteiros): Promise<any> | void;
    visitarDeclaracaoLeiaReais(declaracao: LeiaReais): Promise<any> | void;
    visitarDeclaracaoLeiaTextos(declaracao: LeiaTextos): Promise<any> | void;
    visitarDeclaracaoLeiaInteiro(declaracao: LeiaInteiro): Promise<any> | void;
    visitarDeclaracaoLeiaReal(declaracao: LeiaReal): Promise<any> | void;
    visitarDeclaracaoLeiaTexto(declaracao: LeiaTexto): Promise<any> | void;
    protected resolverInterpolacoes(textoOriginal: string, linha: number): Promise<any[]>;
    protected retirarInterpolacao(texto: string, variaveis: any[]): string;
    visitarDeclaracaoReatribuicaoVariavel(expressao: ReatribuicaoVariavel): Promise<any>;
    visitarExpressaoAcessoMetodoOuPropriedade(expressao: AcessoMetodoOuPropriedade): Promise<any>;
    visitarExpressaoBinaria(expressao: any): Promise<any>;
    visitarExpressaoQualTipo(expressao: QualTipo): Promise<string>;
    avaliarArgumentosEscreva(argumentos: Construto[]): Promise<string>;
}
//# sourceMappingURL=interpretador-potigol-com-depuracao.d.ts.map