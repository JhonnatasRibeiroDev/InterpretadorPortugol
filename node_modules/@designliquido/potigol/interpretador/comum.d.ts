import { AcessoMetodoOuPropriedade, Construto, Tupla } from '@designliquido/delegua/construtos';
import { PilhaEscoposExecucaoInterface } from '@designliquido/delegua/interfaces/pilha-escopos-execucao-interface';
import { EstruturaTupla } from '../estruturas';
import { InterpretadorPotigolInterface } from '../interfaces';
import { QualTipo } from '../construtos';
import { LeiaInteiro, LeiaInteiros, LeiaReais, LeiaReal, LeiaTexto, LeiaTextos, ReatribuicaoVariavel } from '../declaracoes';
export declare function carregarBibliotecaGlobal(pilhaEscoposExecucao: PilhaEscoposExecucaoInterface): void;
export declare function visitarDeclaracaoReatribuicaoVariavel(interpretador: InterpretadorPotigolInterface, declaracao: ReatribuicaoVariavel): Promise<any>;
/**
 * Executa um acesso a método, normalmente de um objeto de classe.
 * @param expressao A expressão de acesso.
 * @returns O resultado da execução.
 */
export declare function visitarExpressaoAcessoMetodoOuPropriedade(interpretador: InterpretadorPotigolInterface, expressao: AcessoMetodoOuPropriedade): Promise<any>;
export declare function visitarExpressaoBinaria(interpretador: InterpretadorPotigolInterface, expressao: any): Promise<any>;
export declare function visitarExpressaoLeia(interpretador: InterpretadorPotigolInterface, expressao: LeiaInteiro | LeiaReal | LeiaTexto): Promise<any>;
export declare function visitarExpressaoLeiaMultiplo(interpretador: InterpretadorPotigolInterface, expressao: LeiaInteiros | LeiaReais | LeiaTextos): Promise<any>;
export declare function visitarExpressaoQualTipo(interpretador: InterpretadorPotigolInterface, expressao: QualTipo): Promise<string>;
export declare function visitarExpressaoTupla(interpretador: InterpretadorPotigolInterface, expressao: Tupla): Promise<EstruturaTupla>;
/**
 * `escreva` em Potigol tem apenas um argumento.
 * @param interpretador A instância do interpretador.
 * @param argumento
 * @returns
 */
export declare function avaliarArgumentosEscreva(interpretador: InterpretadorPotigolInterface, argumento: Construto): Promise<string>;
/**
 * Resolve todas as interpolações em um texto.
 * @param {texto} textoOriginal O texto original com as variáveis interpoladas.
 * @returns Uma lista de variáveis interpoladas.
 */
export declare function resolverInterpolacoes(interpretador: InterpretadorPotigolInterface, textoOriginal: string, linha: number): Promise<any[]>;
/**
 * Retira a interpolação de um texto.
 * @param {texto} texto O texto
 * @param {any[]} variaveis A lista de variaveis interpoladas
 * @returns O texto com o valor das variaveis.
 */
export declare function retirarInterpolacao(texto: string, variaveis: any[]): string;
//# sourceMappingURL=comum.d.ts.map